#!/bin/sh
# Extracted from deb packages to get whole fpm script.


after_upgrade() {
    :

systemctl --system daemon-reload >/dev/null || true
debsystemctl=$(command -v deb-systemd-invoke || echo systemctl)
if ! systemctl is-enabled mimir >/dev/null
then
  : # Ensure this if-clause is not empty. If it were empty, and we had an 'else', then it is an error in shell syntax
else
    $debsystemctl restart mimir >/dev/null || true
fi
}

after_install() {
    :
#!/bin/sh
# SPDX-License-Identifier: AGPL-3.0-only
# Provenance-includes-location: https://github.com/cortexproject/cortex/blob/master/packaging/deb/control/postinst
# Provenance-includes-license: Apache-2.0
# Provenance-includes-copyright: The Cortex Authors.

set -e

# shellcheck disable=1091
[ -f /etc/sysconfig/mimir ] && . /etc/default/mimir

case "$1" in
  configure)
    [ -z "$MIMIR_USER" ] && MIMIR_USER="mimir"
    [ -z "$MIMIR_GROUP" ] && MIMIR_GROUP="mimir"
    if ! getent group "$MIMIR_GROUP" >/dev/null 2>&1; then
      groupadd -r "$MIMIR_GROUP"
    fi
    if ! getent passwd "$MIMIR_USER" >/dev/null 2>&1; then
      useradd -m -r -g mimir -d /var/lib/mimir -s /sbin/nologin -c "mimir user" mimir
    fi

    chmod 640 /etc/mimir/config.example.yaml
    chown root:$MIMIR_GROUP /etc/mimir/config.example.yaml

    if [ -z ${2+x} ] && [ "$RESTART_ON_UPGRADE" = "true" ]; then
      if command -v systemctl 2>/dev/null; then
        systemctl daemon-reload
      fi
    fi
    ;;
esac


systemctl --system daemon-reload >/dev/null || true
debsystemctl=$(command -v deb-systemd-invoke || echo systemctl)
}

if [ "${1}" = "configure" -a -z "${2}" ] || \
   [ "${1}" = "abort-remove" ]
then
    # "after install" here
    # "abort-remove" happens when the pre-removal script failed.
    #   In that case, this script, which should be idemptoent, is run
    #   to ensure a clean roll-back of the removal.
    after_install
elif [ "${1}" = "configure" -a -n "${2}" ]
then
    upgradeFromVersion="${2}"
    # "after upgrade" here
    # NOTE: This slot is also used when deb packages are removed,
    # but their config files aren't, but a newer version of the
    # package is installed later, called "Config-Files" state.
    # basically, that still looks a _lot_ like an upgrade to me.
    after_upgrade "${2}"
elif echo "${1}" | grep -E -q "(abort|fail)"
then
    echo "Failed to install before the post-installation script was run." >&2
    exit 1
fi
