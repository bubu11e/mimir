#!/bin/sh
# Extracted from deb packages to get whole fpm script.

before_remove() {
    :
#!/bin/sh
# SPDX-License-Identifier: AGPL-3.0-only
# Provenance-includes-location: https://github.com/cortexproject/cortex/blob/master/packaging/deb/control/prerm
# Provenance-includes-license: Apache-2.0
# Provenance-includes-copyright: The Cortex Authors.

set -e

# shellcheck disable=1091
[ -f /etc/default/mimir ] && . /etc/default/mimir

case "$1" in
  remove)
    if command -v systemctl 2>/dev/null; then
        systemctl stop mimir.service >/dev/null 2>&1 || :
    fi
    ;;
esac


debsystemctl=$(command -v deb-systemd-invoke || echo systemctl)
$debsystemctl stop mimir >/dev/null || true
systemctl disable mimir >/dev/null || true
systemctl --system daemon-reload >/dev/null || true
}

dummy() {
    :
}

if [ "${1}" = "remove" -a -z "${2}" ]
then
    # "before remove" goes here
    before_remove
elif [ "${1}" = "upgrade" ]
then
    # Executed before the old version is removed
    # upon upgrade.
    # We should generally not do anything here. The newly installed package
    # should do the upgrade, not the uninstalled one, since it can't anticipate
    # what new things it will have to do to upgrade for the new version.
    dummy
elif echo "${1}" | grep -E -q "(fail|abort)"
then
    echo "Failed to install before the pre-removal script was run." >&2
    exit 1
fi
